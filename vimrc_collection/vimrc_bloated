" ============================================================================
" Shortcuts
" ============================================================================
set nocompatible                          " Don't be compatible with vi
let mapleader=","                         " Remap leader to ','

" Task Lists
map <leader>td <Plug>TaskList

" Pep8
let g:pep8_map="<leader>8"

" Window Splits
map <c-j> <c-w>j
map <c-k> <c-w>k
map <c-l> <c-w>l
map <c-h> <c-w>h
" Make it so these work in insert mode
imap <C-W> <C-O><C-W>

" File Browser
map <leader>n :NERDTreeToggle<CR>

" Searching
nmap <leader>a <Esc>:Ack!

" Revision History
map <leader>g :GundoToggle<CR>

" Refactoring and Go to defintion
map <leader>j :RopeGotoDefinition<CR>
map <leader>r :RopeRename<CR>

" Make switching buffers simple

" ============================================================================
" Pathogen - Allows us to organize our vim plugins
" ============================================================================
" Load pathogen with docs for all plugins
filetype off
call pathogen#runtime_append_all_bundles()
call pathogen#helptags()
"execute pathogen#infect()

" ============================================================================
" Basic Settings
" ============================================================================
syntax on                 " Syntax highlighting
filetype on               " Try to detect filetypes
filetype plugin indent on " Enable loading indent file for filetype
set number                " Display line numbers
set numberwidth=1
set background=dark
set title                 " Show title in console title bar
set wildmenu              " Menu completion in command mode on <Tab>
set wildmode=full         " <Tab> between all matching choices

" Don't bell or blink
set noerrorbells
set vb t_vb=

" Ignore these files when completing
set wildignore+=*.o,*.obj,.git,*.pyc
set wildignore+=eggs/**
set wildignore+=*.egg-info/**

set grepprg=ack           " Replace default grep program wiht ack

" Set working directory
nnoremap <leader>. :lcd %:p:h<CR>

" Disable the colorcolumn when switching modes. Make sure this is the
" first autocmd for the filetype here
"autocmd FileType * setlocal colorcolumn=0

""" Insert completion
" Don't select first item, follow typing in autocomplete
set completeopt=menuone,longest,preview
set pumheight=6           " Keep a small completion window

""" Moving Around/Editing
set cursorline            " Have a line indicate the cursor location
set ruler                 " Showthe cursor position all the time
set nostartofline         " Avoid moving the cursor to BOL when jumping around
set virtualedit=block     " Let cursor move past the last char in <c-v> mode
set scrolloff=3           " Keep 3 context lines above and below the cursor
set backspace=2           " Allow backspacing over autoindent, EOL, and BOL
set showmatch             " Briefly jump to a paren once it's balanced
set nowrap                " Don't wrap text
set linebreak             " Don't wrap text in the middle of a word
set autoindent            " Always set autoindenting on
set smartindent           " Use smart indent if there is no indent file
set tabstop=4             " <tab> inserts 4 spaces
set shiftwidth=4          " But an indent level is 2 spaces wide
set softtabstop=4         " <BS> over an autoindent deletes both spaces
set expandtab             " Use spaces, not tabs, for autoindent/tab key
set shiftround            " rounds indent to a multiple of shiftwidth
set matchpairs+=<:>       " Show matching <> (html mainly) as well
set foldmethod=indent     " Allow us to fold on indents
set foldlevel=99          " Don't fold by default

" Don't outdent hashes
inoremap # #

" Close preview window automatically when we move around
autocmd CursorMovedI * if pumvisible() == 0|pclose|endif
autocmd InsertLeave * if pumvisible() == 0|pclose|endif

""" Reading/Writing
set noautowrite           " Never write a file unless requested
set noautowriteall        " NEVER
set noautoread            " Don't automatically re-read changed files
set modeline              " Allow vim options to be embedded in files
set modelines=5           " they must be within the first or last 5 lines
set ffs=unix,dos,mac      " Try recognizing dos, unix, and mac line endings

""" Messages, Info, Status
set ls=2                  " Always show status line
set confirm               " Y-N-C prompt if closing with unsaved changes
set showcmd               " Show incomplete normal mode commands as I type
set report=0              " : commands always print changed line count
set shortmess+=a          " Use [+]/[RO]/[W] for modified/readonly/written
set laststatus=2          " Always show statusline, even if only 1 window
set statusline=[%l,%v\ %P%M]\ %f\ %r%h%w\ (%{&ff})\ %{fugitive#statusline()}

" Displays tabs with :set list & displays when a line runs off-screen
set listchars=tab:>-,eol:$,trail:-,precedes:<,extends:>
set list

""" Searching and Patterns
set ignorecase            " Default to using case insensitive searches
set smartcase             " Unless uppercase letters are used in the regex
set smarttab              " Handle tabs more intelligently
set hlsearch              " Highlight searches by default
set incsearch             " Incrementally search while typing a /regex

""" Display
if has("gui_running")
    colorscheme desert
    set guioptions-=m     " Remove menu bar
    set guioptions-=T     " Remove toolbar
else
    "colorscheme torte
    "colorscheme darkblue
    colorscheme peaksea
endif

" Paste from clipboard
map <leader>p "+p

" Quit windows on <leader>q
nnoremap <leader>q :q<CR>

" Hide matches on <leader>space
nnoremap <leader><space> :nohlsearch<CR>

" Remove trailing whitespace on <leader>S
nnoremap <leader>S :%s/\s\+$//<cr>:let @/=''<CR>

" Select the item in the list with enter
inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"

" ============================================================================
" Javascript
" ============================================================================
au BufRead *.js set makeprg=jslint\ %

" Use tab to scroll through autocomplete menus
"autocmd VimEnter * imap <expr> <Tab> pumvisible() ? "<C-N>" : "<Tab>"
"autocmd VimEnter * imap <expr> <S-Tab> pumvisible() ? "<C-P>" : "<S-Tab>"

let g:acp_completeoptPreview=1

" ============================================================================
" FileType specific changes
" ============================================================================
" Mako/HTML
autocmd BufNewFile,BufRead *.mako,*.mak,*.jinja2 setlocal ft=html
autocmd FileType html,xhtml,xml,css setlocal expandtab shiftwidth=2 tabstop=2 softtabstop=2

" Python
"au BufRead *.py compiler nose
au FileType python set omnifunc=pythoncomplete#Complete
au FileType python setlocal expandtab shiftwidth=4 tabstop=8 softtabstop=4 smartindent cinwords=if,elif,else,for,while,try,except,finally,def,class,with
au FileType coffee setlocal expandtab shiftwidth=4 tabstop=8 softtabstop=4 smartindent cinwords=if,elif,else,for,while,try,except,finally,def,class,with
au BufRead *.py set efm=%C\ %.%#,%A\ \ File\ \"%f\"\\,\ line\ %l%.%#,%Z%[%^\ ]%\\@=%m
" Don't let pyflakes use the quickfix window
let g:pyflakes_use_quickfix=0

" Tab Completion and Documentation
au FileType python set omnifunc=pythoncomplete#Complete
let g:SuperTabDefaultCompletionType="context"
set completeopt=menuone,longest,preview

" Add the virtualenv's site-packages to vim path
py << EOF
import os.path
import sys
import vim
if 'VIRTUAL_ENV' in os.environ:
    project_base_dir = os.environ['VIRTUAL_ENV']
    sys.path.insert(0, project_base_dir)
    activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
    execfile(activate_this, dict(__file__=activate_this))
EOF

" Load up virtualenv's vimrc if it exists
if filereadable($VIRTUAL_ENV . '/.vimrc')
    source $VIRTUAL_ENV/.vimrc
endif

set colorcolumn=79
